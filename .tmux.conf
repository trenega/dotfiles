# ----------------------------------------------------------------------------
# |
# File name     :  ~/.tmux.conf
# Copyright     :  nis
# Modified      :  2021/06/01 08:07
# ----------------------------------------------------------------------------

# >>> Reference: https://girigiribauer.com/tech/20200427/ >>>

# ----------------------------------------------------------------------------
# BASIC
# ----------------------------------------------------------------------------


# >>> prefix キーを Ctrl-b から Ctrl-j に変える >>>
set -g prefix C-j
bind C-j send-prefix
unbind-key C-b
# <<< prefix キーを Ctrl-b から Ctrl-j に変える <<<

setw -g mode-keys vi
set -g @shell_mode 'vi'

# キーボード側が左から 1,2... と並んでいるので、
# キーボード位置に合わせてウィンドウに1から番号振ると分かりやすい
# でないと 0 だけ右、次の1は左、みたいにややこしい
set -g base-index 1
set -g pane-base-index 1

# Set escape-time
# Reference Neovim :checkhealth
# -ERROR: -ADVICE:
set-option -sg escape-time 10

# ----------------------------------------------------------------------------
# MAPPING
# ----------------------------------------------------------------------------

# <prefix> + r で勝手に .tmux.conf を読み込んでくれる
# Reference: http://d.hatena.ne.jp/kiririmode/20120321/p1
bind r source-file ~/.tmux.conf\; display-message "$HOME/.tmux.conf reloaded!"


# >>> @nl0_blu 2019/03/24 qiita.com >>>
# tmuxを必要最低限で入門して使う
#ペインの移動をvi風のする
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# ペインのサイズ変更
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# <prefix> + s でペインを横分割(split)する
unbind '"'
bind - split-window -v
# <prefix> + \ でペインを縦分割(vertical)する
# unbind %
# bind \ split-window -h

# コピーモードを設定する
# コピーモードでvimキーバインドを使う
setw -g mode-keys vi

# 'v' で選択を始める
bind -T copy-mode-vi v send -X begin-selection

# 'V' で行選択を始める
bind -T copy-mode-vi V send -X select-line

# 'C-v' で矩形選択に切り替える（あくまで選択開始できるのは'v'だけです。
# 'v'で選択を開始した後に、'C-v'で矩形選択に切り替えれます。）
bind -T copy-mode-vi C-v send -X rectangle-toggle

# 'y' でヤンクをして、コピーモードを抜ける
bind -T copy-mode-vi y send -X  copy-pipe-and-cancel "pbcopy"

# 'Y' で行ヤンクして、コピーモードから抜ける
bind -T copy-mode-vi Y send -X copy-line

# 'C-j p'でペースト
# ペーストして、<CR>を実行する
# bind p paste-buffer
# <<<  nl0_blu 2019/03/24 qiita.com <<<

# ----------------------------------------------------------------------------
# PLUGINS
# ----------------------------------------------------------------------------

# プラグインを管理するためのプラグイン
# 手動で読み込む必要あり！
# <prefix> + i で指定されているプラグインをインストール
# <prefix> + u でアップデート
set -g @plugin "tmux-plugins/tpm"

# セッションを保持してくれるプラグイン
# https://github.com/tmux-plugins/tmux-resurrect
# <prefix> + Ctrl-s でセッション保存
# <prefix> + Ctrl-r で復元（リストア）
set -g @plugin "tmux-plugins/tmux-resurrect"

# さらに勝手にセッション保持してくれるプラグイン
# https://github.com/tmux-plugins/tmux-continuum
# @continuum-save-interval を指定することで、保持する間隔を指定できる
set -g @plugin "tmux-plugins/tmux-continuum"
set -g @continuum-save-interval 10

# ファイルツリーが見られるつ
# https://github.com/tmux-plugins/tmux-sidebar
# <prefix> + <Tab> で表示
# もう一度 <prefix> + <Tab> を押すか、そのペインに移動してから q で閉じる
set -g @plugin "tmux-plugins/tmux-sidebar"

# vi のキーバインドでペイン移動できちゃうやつ
# https://github.com/tmux-plugins/tmux-pain-control
# 結局 tmux のペイン移動を覚える必要があるので、 vi に合わせておくと脳のコスト下がる
set -g @plugin "tmux-plugins/tmux-pain-control"

# 黒い画面からのコピペ
# https://github.com/tmux-plugins/tmux-yank
# <prefix> + y で画面まるまるヤンク（コピー）できる
# 実際は画面全体じゃなく部分的にコピーすることが大半なので、
# <prefix> + [ でコピーモードに切り替えてから、 v を押して選択し y でコピー
set -g @plugin 'tmux-plugins/tmux-yank'

# <<< https://girigiribauer.com/tech/20200427/ <<<

# ----------------------------------------------------------------------------
# CUSTOMIZE
# ----------------------------------------------------------------------------

# Glide Note glidenote' blog
# blog.glidenot.com
# tmuxの外観をカスタムして、運用と開発を加速させる
# status
#set -g status-fg black
#set -g status-bg white

# Example .tmux.conf
# By Nicholas Marriott. Public domain.
# status
#set -g status-right "%H:%M"
#set -g window-status-current-style "underscore"

# from http://www.tohoho-web.com/ex/tmux.html
# ステータスバーの文字色、背景色を変更する
# "colour223" NavajoWhite1
#set -g status-fg "colour223"
# "colour23" DeepSkyBlue4
#set -g status-bg "colour23"

# >>> @FrogWoman 2017/11/13 >>>
# ターミナルをかっこよくカスタマイズしたいためだけにtmuxデビューしてみた
# qiita.com

# 描画更新間隔秒。デフォルトは15秒
# 右パネルで時間を秒まで出しているので1秒に設定しました
set -g status-interval 1

# 全体
set -g status-fg "colour223"
set -g status-bg "colour238"

## ステータスバーを上部に表示する
set -g status-position top

# 左パネル
#'#S'はセッション名
set -g status-left-length 60
set -g status-left "[#S]"

#中央
## ウィンドウリストの位置を中心寄せにする
set -g status-justify "centre"

## window-status のフォーマットを指定する。
## '#I'はカレントウィンドウのインデックス、'#W'はカレントウィンドウ名
set-window-option -g window-status-format " #I: #W "

## カレントウィンドウwindow-status のフォーマットを指定する
set-window-option -g window-status-current-format "#[fg=colour239,bg=colour150] #I: #W"

# 右パネル
# ' #h'はホスト名、'%m/%d %H:%:%S'は月/日 時:分:秒
#set -g status-right-length 60
set -g status-right "#[fg=colour239,bg=colour146] #h %m/%d %H:%M"

# <<< @FrogWoman 2017/11/13 <<<

# ----------------------------------------------------------------------------
# GITHUB.COM
# ----------------------------------------------------------------------------

# github.com
# tmux-plugins/tpm
# Tmux Plugin Manager

# List of plugins
#set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com:user/plugin'
# set -g @plugin 'git@bitbucket.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# ----------------------------------------------------------------------------
# END OF FILE .tmux.conf
# ----------------------------------------------------------------------------
